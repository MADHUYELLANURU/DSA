##  Duplicate within K Distance in an Array

public class DSA{
    public boolean DuplicatewithinK(int[] arr,int K){
        int n = arr.length;
        for(int i=0;i<n;i++){
                for(int a=1;a<=K &&(i+a)<n;a++){
                     int j =i+a;
                     if(arr[i]==arr[j])
                     return true;
                }
        }
        return false;
    }
    public static void main(String[] args) {
        DSA obj = new DSA();
        int[] arr = {1,2,3,4,1,3,8,9,10};
        int K = 5;
        if(true){
            System.err.println("Yes");
        }else{
            System.out.println("No");
        }
    }
}

##  Duplicate within K Distance in an Array using HashSet

import java.util.*;
public class DSA{
    public static boolean Duplicte(int[] arr,int k){
        HashSet<Integer> set = new HashSet<>();
        for(int i=0;i<arr.length;i++){
            if(set.contains(arr[i]))
                return true;                
            set.add(arr[i]);
            if(i>=k)
            set.remove(arr[i-k]);
        }
        return false;
    }
    public static void main(String[] args) {
        int[] arr = {1,2,3,4,5,6,7,8,9};
        int k =4;
        if(Duplicte(arr, k)){
            System.out.println("YES");
        }else{
            System.out.println("NO");
        }
    }
}
