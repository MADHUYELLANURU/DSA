##  Maximum product of a triplet (subsequence of size 3) in array

public class DSA{
    public static int Maxproduct(int[] arr){
        int n = arr.length;
        int Max_product = Integer.MIN_VALUE;
        for(int i=0;i<n-2;i++){
            for(int j=i+1;j<n-1;j++){
                for(int k=j+1;k<n;k++){
                    Max_product = Math.max(Max_product,arr[i]*arr[j]*arr[k]);
                  //  return Max_product;
                }
            }
        }
        return Max_product;
    }
    public static void main(String[] args){
        int[] arr = {2,4,3,6,10,30,20};
        int result = Maxproduct(arr);
         System.out.println("Maximum product of three numbers is : "+result);
    }
}

##  Reverse an Array in groups of given size

public class DSA{
    static void Reverse(int[] arr, int k){
        int n = arr.length;        
        for(int i=0;i<n;i+=k){
            int left = i;
            int right = Math.min(i+k-1,n-1);
            while(left <right){
                int temp = arr[left];
                arr[left] = arr[right];
                arr[right] = temp;
                left++;
                right--;
            }
        }
    }
    public static void main(String[] args){
        int[] arr = {2,3,4,1,6,5,78,8,9};
        int k=3;
        Reverse(arr, k);
        System.out.print("Reversed Array is : ");
        for(int num : arr)
        System.out.print(num + " ");
    }
}

## BINARY SEARCH

public class DSA{
    public static int Binarysearch(int[] arr, int X){
        int n = arr.length;
        int low = 0;
        int high = n-1;
        while(low<=high){
            int mid= low + (high-low)/2;
            if(arr[mid] == X){
                return mid;
            }
            if(arr[mid]<X){
                low = mid+1;
            }else{
                high = mid-1;
            }
        }
        return -1;
    }
    public static void main(String[] args) {
        DSA  obj = new DSA();
        int[] arr = {2,3,4,5,78,79,91};
        int X = 78;
        int result = obj.Binarysearch(arr, X);
        if(result == -1){
            System.out.println("Element Not Found");
        }else{
            System.out.println("Element Found at Index : "+ result);
        }
    }
}
